{"version":3,"sources":["components/NavBar.js","Pages/About.js","Pages/Contact.js","Pages/Home.js","Pages/Portfolio.js","Pages/Skills.js","serviceWorker.js","index.js","Pages/index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","light","expand","id","NavbarBrand","href","Nav","className","navbar","Link","to","fa","Component","About","components_NavBar","Contact","Home","Portfolio","Skills","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9eb79af2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Navbar, NavbarBrand, Nav } from 'reactstrap';\nimport * as FontAwesome from 'react-icons/fa';\n\nclass NavBar extends Component{\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar light expand=\"md\" id=\"navbar\">\n          <NavbarBrand href=\"/\"><p id=\"AngryThundrWafl\">AngryThundrWafl</p></NavbarBrand>\n            <Nav className=\"ml-auto\" navbar id=\"nav\">\n              <Link to='/Home'><FontAwesome.FaHome id=\"icon-home\"/></Link>\n              <Link to='/About'><FontAwesome.FaUser id=\"icon-about\"/></Link>\n              <Link to='/Contact'><FontAwesome.FaEnvelope id=\"icon-contact\"/></Link>\n              <Link to='/Portfolio'><FontAwesome.FaEye id=\"icon-portfolio\"/></Link>\n              <Link to='/Skills'><FontAwesome.FaCode id=\"icon-skills\"/></Link>\n            </Nav>\n            <ul>\n              <li><a href=\"https://github.com/AngryThundrWafl\"><FontAwesome.FaGithub/></a></li>\n              <li><a href=\"https://www.linkedin.com/in/brian-pina-estrada-576791155/\"><FontAwesome.FaLinkedin/></a></li>\n            </ul>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport NavBar from '../components/NavBar.js';\nimport '../stylesheets/main.css'\nimport '../stylesheets/normalize.css'\n\nclass About extends Component{\n  render(){\n    return(\n      <div id='about'>\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport NavBar from '../components/NavBar.js';\nimport '../stylesheets/main.css'\nimport '../stylesheets/normalize.css'\n\nclass Contact extends Component{\n  render(){\n    return(\n      <div id='contact'>\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport NavBar from '../components/NavBar.js';\nimport '../stylesheets/main.css'\nimport '../stylesheets/normalize.css'\n\nclass Home extends Component{\n  render() {\n    return(\n      <div id=\"home\">\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport NavBar from '../components/NavBar.js';\nimport '../stylesheets/main.css'\nimport '../stylesheets/normalize.css'\n\nclass Portfolio extends Component{\n  render(){\n    return(\n      <div id='portfolio'>\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport NavBar from '../components/NavBar.js';\nimport '../stylesheets/main.css'\nimport '../stylesheets/normalize.css'\n\nclass Skills extends Component{\n  render(){\n    return(\n      <div id='skills'>\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Pages';\nimport * as serviceWorker from './serviceWorker';\n\n//renders pages with hashrouter\nReactDOM.render(<Routes/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {HashRouter,Route,Switch} from 'react-router-dom';\nimport About from './About.js';\nimport Contact from './Contact.js';\nimport Home from './Home.js';\nimport Portfolio from './Portfolio.js';\nimport Skills from './Skills.js';\n\nexport default() => (\n  <HashRouter>\n    <Switch>\n      <Route exact path='/About' component={About} />\n      <Route exact path='/Contact' component={Contact} />\n      <Route exact path='/Home' component={Home} />\n      <Route exact path='/Portfolio' component={Portfolio} />\n      <Route exact path='/Skills' component={Skills} />\n      <Route exact path='/' component={Home} />\n    </Switch>\n  </HashRouter>\n);\n"],"sourceRoot":""}